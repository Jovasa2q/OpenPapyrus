/* Generated by Snowball 2.0.0 - https://snowballstem.org/ */


#include <xapian-internal.h>
#pragma hdrstop
#include "portuguese.sbl.h"

static const symbol s_pool[] = {
#define s_0_1 0
0xC3, 0xA3,
#define s_0_2 2
0xC3, 0xB5,
#define s_1_1 4
'a', '~',
#define s_1_2 6
'o', '~',
#define s_2_0 8
'i', 'c',
#define s_2_1 10
'a', 'd',
#define s_2_2 12
'o', 's',
#define s_2_3 14
'i', 'v',
#define s_3_0 16
'a', 'n', 't', 'e',
#define s_3_1 20
'a', 'v', 'e', 'l',
#define s_3_2 24
0xC3, 0xAD, 'v', 'e', 'l',
#define s_4_0 29
'i', 'c',
#define s_4_1 31
'a', 'b', 'i', 'l',
#define s_4_2 35
'i', 'v',
#define s_5_0 s_5_25
#define s_5_1 37
0xC3, 0xA2, 'n', 'c', 'i', 'a',
#define s_5_2 s_5_26
#define s_5_3 s_5_27
#define s_5_4 s_5_28
#define s_5_5 s_5_29
#define s_5_6 s_5_30
#define s_5_7 s_5_31
#define s_5_8 s_5_32
#define s_5_9 s_5_33
#define s_5_10 s_5_34
#define s_5_11 s_5_36
#define s_5_12 (s_5_13 + 1)
#define s_5_13 43
'a', 'm', 'e', 'n', 't', 'e',
#define s_5_14 49
0xC3, 0xA1, 'v', 'e', 'l',
#define s_5_15 54
0xC3, 0xAD, 'v', 'e', 'l',
#define s_5_16 s_5_39
#define s_5_17 s_5_40
#define s_5_18 s_5_41
#define s_5_19 s_5_42
#define s_5_20 s_5_43
#define s_5_21 s_5_44
#define s_5_22 59
'a', 0xC3, 0xA7, 'a', '~', 'o',
#define s_5_23 65
'u', 0xC3, 0xA7, 'a', '~', 'o',
#define s_5_24 s_5_5
#define s_5_25 71
'i', 'c', 'a', 's',
#define s_5_26 75
0xC3, 0xAA, 'n', 'c', 'i', 'a', 's',
#define s_5_27 82
'l', 'o', 'g', 'i', 'a', 's',
#define s_5_28 88
'i', 'r', 'a', 's',
#define s_5_29 92
'a', 'd', 'o', 'r', 'a', 's',
#define s_5_30 98
'o', 's', 'a', 's',
#define s_5_31 102
'i', 's', 't', 'a', 's',
#define s_5_32 107
'i', 'v', 'a', 's',
#define s_5_33 111
'e', 'z', 'a', 's',
#define s_5_34 115
'i', 'd', 'a', 'd', 'e', 's',
#define s_5_35 121
'a', 'd', 'o', 'r', 'e', 's',
#define s_5_36 127
'a', 'n', 't', 'e', 's',
#define s_5_37 132
'a', 0xC3, 0xA7, 'o', '~', 'e', 's',
#define s_5_38 139
'u', 0xC3, 0xA7, 'o', '~', 'e', 's',
#define s_5_39 146
'i', 'c', 'o', 's',
#define s_5_40 150
'i', 's', 'm', 'o', 's',
#define s_5_41 155
'o', 's', 'o', 's',
#define s_5_42 159
'a', 'm', 'e', 'n', 't', 'o', 's',
#define s_5_43 166
'i', 'm', 'e', 'n', 't', 'o', 's',
#define s_5_44 173
'i', 'v', 'o', 's',
#define s_6_0 s_6_48
#define s_6_1 s_6_49
#define s_6_2 (s_6_3 + 2)
#define s_6_3 s_6_22
#define s_6_4 s_6_23
#define s_6_5 s_6_24
#define s_6_6 s_6_25
#define s_6_7 s_6_26
#define s_6_8 s_6_27
#define s_6_9 s_6_28
#define s_6_10 s_6_33
#define s_6_11 s_6_34
#define s_6_12 s_6_35
#define s_6_13 s_6_68
#define s_6_14 s_6_69
#define s_6_15 s_6_70
#define s_6_16 (s_6_17 + 2)
#define s_6_17 s_6_74
#define s_6_18 s_6_75
#define s_6_19 s_6_76
#define s_6_20 (s_6_21 + 1)
#define s_6_21 (s_6_22 + 2)
#define s_6_22 177
'a', 'r', 'i', 'a', 'm',
#define s_6_23 182
'e', 'r', 'i', 'a', 'm',
#define s_6_24 187
'i', 'r', 'i', 'a', 'm',
#define s_6_25 192
'a', 'r', 'a', 'm',
#define s_6_26 196
'e', 'r', 'a', 'm',
#define s_6_27 200
'i', 'r', 'a', 'm',
#define s_6_28 204
'a', 'v', 'a', 'm',
#define s_6_29 (s_6_30 + 2)
#define s_6_30 s_6_100
#define s_6_31 s_6_101
#define s_6_32 s_6_102
#define s_6_33 208
'a', 's', 's', 'e', 'm',
#define s_6_34 213
'e', 's', 's', 'e', 'm',
#define s_6_35 218
'i', 's', 's', 'e', 'm',
#define s_6_36 s_6_88
#define s_6_37 s_6_89
#define s_6_38 223
'a', 'n', 'd', 'o',
#define s_6_39 227
'e', 'n', 'd', 'o',
#define s_6_40 231
'i', 'n', 'd', 'o',
#define s_6_41 235
'a', 'r', 'a', '~', 'o',
#define s_6_42 240
'e', 'r', 'a', '~', 'o',
#define s_6_43 245
'i', 'r', 'a', '~', 'o',
#define s_6_44 s_6_3
#define s_6_45 s_6_4
#define s_6_46 s_6_5
#define s_6_47 s_6_10
#define s_6_48 250
'a', 'd', 'a', 's',
#define s_6_49 254
'i', 'd', 'a', 's',
#define s_6_50 (s_6_51 + 2)
#define s_6_51 258
'a', 'r', 'i', 'a', 's',
#define s_6_52 263
'e', 'r', 'i', 'a', 's',
#define s_6_53 268
'i', 'r', 'i', 'a', 's',
#define s_6_54 273
'a', 'r', 'a', 's',
#define s_6_55 277
'e', 'r', 'a', 's',
#define s_6_56 281
'i', 'r', 'a', 's',
#define s_6_57 285
'a', 'v', 'a', 's',
#define s_6_58 s_6_11
#define s_6_59 289
'a', 'r', 'd', 'e', 's',
#define s_6_60 294
'e', 'r', 'd', 'e', 's',
#define s_6_61 299
'i', 'r', 'd', 'e', 's',
#define s_6_62 304
'a', 'r', 'e', 's',
#define s_6_63 308
'e', 'r', 'e', 's',
#define s_6_64 312
'i', 'r', 'e', 's',
#define s_6_65 316
'a', 's', 's', 'e', 's',
#define s_6_66 321
'e', 's', 's', 'e', 's',
#define s_6_67 326
'i', 's', 's', 'e', 's',
#define s_6_68 331
'a', 's', 't', 'e', 's',
#define s_6_69 336
'e', 's', 't', 'e', 's',
#define s_6_70 341
'i', 's', 't', 'e', 's',
#define s_6_71 s_6_12
#define s_6_72 346
'a', 'i', 's',
#define s_6_73 (s_6_74 + 2)
#define s_6_74 349
'a', 'r', 'e', 'i', 's',
#define s_6_75 354
'e', 'r', 'e', 'i', 's',
#define s_6_76 359
'i', 'r', 'e', 'i', 's',
#define s_6_77 364
0xC3, 0xA1, 'r', 'e', 'i', 's',
#define s_6_78 370
0xC3, 0xA9, 'r', 'e', 'i', 's',
#define s_6_79 376
0xC3, 0xAD, 'r', 'e', 'i', 's',
#define s_6_80 382
0xC3, 0xA1, 's', 's', 'e', 'i', 's',
#define s_6_81 389
0xC3, 0xA9, 's', 's', 'e', 'i', 's',
#define s_6_82 396
0xC3, 0xAD, 's', 's', 'e', 'i', 's',
#define s_6_83 403
0xC3, 0xA1, 'v', 'e', 'i', 's',
#define s_6_84 (s_6_85 + 2)
#define s_6_85 409
'a', 'r', 0xC3, 0xAD, 'e', 'i', 's',
#define s_6_86 416
'e', 'r', 0xC3, 0xAD, 'e', 'i', 's',
#define s_6_87 423
'i', 'r', 0xC3, 0xAD, 'e', 'i', 's',
#define s_6_88 430
'a', 'd', 'o', 's',
#define s_6_89 434
'i', 'd', 'o', 's',
#define s_6_90 (s_6_91 + 3)
#define s_6_91 438
0xC3, 0xA1, 'r', 'a', 'm', 'o', 's',
#define s_6_92 445
0xC3, 0xA9, 'r', 'a', 'm', 'o', 's',
#define s_6_93 452
0xC3, 0xAD, 'r', 'a', 'm', 'o', 's',
#define s_6_94 459
0xC3, 0xA1, 'v', 'a', 'm', 'o', 's',
#define s_6_95 (s_6_96 + 2)
#define s_6_96 466
'a', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's',
#define s_6_97 474
'e', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's',
#define s_6_98 482
'i', 'r', 0xC3, 0xAD, 'a', 'm', 'o', 's',
#define s_6_99 (s_6_100 + 2)
#define s_6_100 490
'a', 'r', 'e', 'm', 'o', 's',
#define s_6_101 496
'e', 'r', 'e', 'm', 'o', 's',
#define s_6_102 502
'i', 'r', 'e', 'm', 'o', 's',
#define s_6_103 508
0xC3, 0xA1, 's', 's', 'e', 'm', 'o', 's',
#define s_6_104 516
0xC3, 0xAA, 's', 's', 'e', 'm', 'o', 's',
#define s_6_105 524
0xC3, 0xAD, 's', 's', 'e', 'm', 'o', 's',
#define s_6_106 532
'i', 'm', 'o', 's',
#define s_6_107 536
'a', 'r', 'm', 'o', 's',
#define s_6_108 541
'e', 'r', 'm', 'o', 's',
#define s_6_109 546
'i', 'r', 'm', 'o', 's',
#define s_6_110 551
0xC3, 0xA1, 'm', 'o', 's',
#define s_6_111 556
'a', 'r', 0xC3, 0xA1, 's',
#define s_6_112 561
'e', 'r', 0xC3, 0xA1, 's',
#define s_6_113 566
'i', 'r', 0xC3, 0xA1, 's',
#define s_6_114 571
'e', 'u',
#define s_6_115 573
'i', 'u',
#define s_6_116 575
'o', 'u',
#define s_6_117 s_6_111
#define s_6_118 s_6_112
#define s_6_119 s_6_113
#define s_7_0 577
'a',
#define s_7_1 578
'i',
#define s_7_2 s_7_3
#define s_7_3 579
'o', 's',
#define s_7_4 581
0xC3, 0xA1,
#define s_7_5 583
0xC3, 0xAD,
#define s_7_6 585
0xC3, 0xB3,
#define s_8_0 587
'e',
#define s_8_1 588
0xC3, 0xA7,
#define s_8_2 590
0xC3, 0xA9,
#define s_8_3 592
0xC3, 0xAA,
};


static const Among a_0[3] = {
/*  0 */ { 0, 0, -1, 3},
/*  1 */ { 2, s_0_1, 0, 1},
/*  2 */ { 2, s_0_2, 0, 2}
};


static const Among a_1[3] = {
/*  0 */ { 0, 0, -1, 3},
/*  1 */ { 2, s_1_1, 0, 1},
/*  2 */ { 2, s_1_2, 0, 2}
};


static const Among a_2[4] = {
/*  0 */ { 2, s_2_0, -1, -1},
/*  1 */ { 2, s_2_1, -1, -1},
/*  2 */ { 2, s_2_2, -1, -1},
/*  3 */ { 2, s_2_3, -1, 1}
};


static const Among a_3[3] = {
/*  0 */ { 4, s_3_0, -1, 1},
/*  1 */ { 4, s_3_1, -1, 1},
/*  2 */ { 5, s_3_2, -1, 1}
};


static const Among a_4[3] = {
/*  0 */ { 2, s_4_0, -1, 1},
/*  1 */ { 4, s_4_1, -1, 1},
/*  2 */ { 2, s_4_2, -1, 1}
};


static const Among a_5[45] = {
/*  0 */ { 3, s_5_0, -1, 1},
/*  1 */ { 6, s_5_1, -1, 1},
/*  2 */ { 6, s_5_2, -1, 4},
/*  3 */ { 5, s_5_3, -1, 2},
/*  4 */ { 3, s_5_4, -1, 9},
/*  5 */ { 5, s_5_5, -1, 1},
/*  6 */ { 3, s_5_6, -1, 1},
/*  7 */ { 4, s_5_7, -1, 1},
/*  8 */ { 3, s_5_8, -1, 8},
/*  9 */ { 3, s_5_9, -1, 1},
/* 10 */ { 5, s_5_10, -1, 7},
/* 11 */ { 4, s_5_11, -1, 1},
/* 12 */ { 5, s_5_12, -1, 6},
/* 13 */ { 6, s_5_13, 12, 5},
/* 14 */ { 5, s_5_14, -1, 1},
/* 15 */ { 5, s_5_15, -1, 1},
/* 16 */ { 3, s_5_16, -1, 1},
/* 17 */ { 4, s_5_17, -1, 1},
/* 18 */ { 3, s_5_18, -1, 1},
/* 19 */ { 6, s_5_19, -1, 1},
/* 20 */ { 6, s_5_20, -1, 1},
/* 21 */ { 3, s_5_21, -1, 8},
/* 22 */ { 6, s_5_22, -1, 1},
/* 23 */ { 6, s_5_23, -1, 3},
/* 24 */ { 4, s_5_24, -1, 1},
/* 25 */ { 4, s_5_25, -1, 1},
/* 26 */ { 7, s_5_26, -1, 4},
/* 27 */ { 6, s_5_27, -1, 2},
/* 28 */ { 4, s_5_28, -1, 9},
/* 29 */ { 6, s_5_29, -1, 1},
/* 30 */ { 4, s_5_30, -1, 1},
/* 31 */ { 5, s_5_31, -1, 1},
/* 32 */ { 4, s_5_32, -1, 8},
/* 33 */ { 4, s_5_33, -1, 1},
/* 34 */ { 6, s_5_34, -1, 7},
/* 35 */ { 6, s_5_35, -1, 1},
/* 36 */ { 5, s_5_36, -1, 1},
/* 37 */ { 7, s_5_37, -1, 1},
/* 38 */ { 7, s_5_38, -1, 3},
/* 39 */ { 4, s_5_39, -1, 1},
/* 40 */ { 5, s_5_40, -1, 1},
/* 41 */ { 4, s_5_41, -1, 1},
/* 42 */ { 7, s_5_42, -1, 1},
/* 43 */ { 7, s_5_43, -1, 1},
/* 44 */ { 4, s_5_44, -1, 8}
};


static const Among a_6[120] = {
/*  0 */ { 3, s_6_0, -1, 1},
/*  1 */ { 3, s_6_1, -1, 1},
/*  2 */ { 2, s_6_2, -1, 1},
/*  3 */ { 4, s_6_3, 2, 1},
/*  4 */ { 4, s_6_4, 2, 1},
/*  5 */ { 4, s_6_5, 2, 1},
/*  6 */ { 3, s_6_6, -1, 1},
/*  7 */ { 3, s_6_7, -1, 1},
/*  8 */ { 3, s_6_8, -1, 1},
/*  9 */ { 3, s_6_9, -1, 1},
/* 10 */ { 4, s_6_10, -1, 1},
/* 11 */ { 4, s_6_11, -1, 1},
/* 12 */ { 4, s_6_12, -1, 1},
/* 13 */ { 4, s_6_13, -1, 1},
/* 14 */ { 4, s_6_14, -1, 1},
/* 15 */ { 4, s_6_15, -1, 1},
/* 16 */ { 2, s_6_16, -1, 1},
/* 17 */ { 4, s_6_17, 16, 1},
/* 18 */ { 4, s_6_18, 16, 1},
/* 19 */ { 4, s_6_19, 16, 1},
/* 20 */ { 2, s_6_20, -1, 1},
/* 21 */ { 3, s_6_21, 20, 1},
/* 22 */ { 5, s_6_22, 21, 1},
/* 23 */ { 5, s_6_23, 21, 1},
/* 24 */ { 5, s_6_24, 21, 1},
/* 25 */ { 4, s_6_25, 20, 1},
/* 26 */ { 4, s_6_26, 20, 1},
/* 27 */ { 4, s_6_27, 20, 1},
/* 28 */ { 4, s_6_28, 20, 1},
/* 29 */ { 2, s_6_29, -1, 1},
/* 30 */ { 4, s_6_30, 29, 1},
/* 31 */ { 4, s_6_31, 29, 1},
/* 32 */ { 4, s_6_32, 29, 1},
/* 33 */ { 5, s_6_33, 29, 1},
/* 34 */ { 5, s_6_34, 29, 1},
/* 35 */ { 5, s_6_35, 29, 1},
/* 36 */ { 3, s_6_36, -1, 1},
/* 37 */ { 3, s_6_37, -1, 1},
/* 38 */ { 4, s_6_38, -1, 1},
/* 39 */ { 4, s_6_39, -1, 1},
/* 40 */ { 4, s_6_40, -1, 1},
/* 41 */ { 5, s_6_41, -1, 1},
/* 42 */ { 5, s_6_42, -1, 1},
/* 43 */ { 5, s_6_43, -1, 1},
/* 44 */ { 2, s_6_44, -1, 1},
/* 45 */ { 2, s_6_45, -1, 1},
/* 46 */ { 2, s_6_46, -1, 1},
/* 47 */ { 2, s_6_47, -1, 1},
/* 48 */ { 4, s_6_48, 47, 1},
/* 49 */ { 4, s_6_49, 47, 1},
/* 50 */ { 3, s_6_50, 47, 1},
/* 51 */ { 5, s_6_51, 50, 1},
/* 52 */ { 5, s_6_52, 50, 1},
/* 53 */ { 5, s_6_53, 50, 1},
/* 54 */ { 4, s_6_54, 47, 1},
/* 55 */ { 4, s_6_55, 47, 1},
/* 56 */ { 4, s_6_56, 47, 1},
/* 57 */ { 4, s_6_57, 47, 1},
/* 58 */ { 2, s_6_58, -1, 1},
/* 59 */ { 5, s_6_59, 58, 1},
/* 60 */ { 5, s_6_60, 58, 1},
/* 61 */ { 5, s_6_61, 58, 1},
/* 62 */ { 4, s_6_62, 58, 1},
/* 63 */ { 4, s_6_63, 58, 1},
/* 64 */ { 4, s_6_64, 58, 1},
/* 65 */ { 5, s_6_65, 58, 1},
/* 66 */ { 5, s_6_66, 58, 1},
/* 67 */ { 5, s_6_67, 58, 1},
/* 68 */ { 5, s_6_68, 58, 1},
/* 69 */ { 5, s_6_69, 58, 1},
/* 70 */ { 5, s_6_70, 58, 1},
/* 71 */ { 2, s_6_71, -1, 1},
/* 72 */ { 3, s_6_72, 71, 1},
/* 73 */ { 3, s_6_73, 71, 1},
/* 74 */ { 5, s_6_74, 73, 1},
/* 75 */ { 5, s_6_75, 73, 1},
/* 76 */ { 5, s_6_76, 73, 1},
/* 77 */ { 6, s_6_77, 73, 1},
/* 78 */ { 6, s_6_78, 73, 1},
/* 79 */ { 6, s_6_79, 73, 1},
/* 80 */ { 7, s_6_80, 73, 1},
/* 81 */ { 7, s_6_81, 73, 1},
/* 82 */ { 7, s_6_82, 73, 1},
/* 83 */ { 6, s_6_83, 73, 1},
/* 84 */ { 5, s_6_84, 73, 1},
/* 85 */ { 7, s_6_85, 84, 1},
/* 86 */ { 7, s_6_86, 84, 1},
/* 87 */ { 7, s_6_87, 84, 1},
/* 88 */ { 4, s_6_88, -1, 1},
/* 89 */ { 4, s_6_89, -1, 1},
/* 90 */ { 4, s_6_90, -1, 1},
/* 91 */ { 7, s_6_91, 90, 1},
/* 92 */ { 7, s_6_92, 90, 1},
/* 93 */ { 7, s_6_93, 90, 1},
/* 94 */ { 7, s_6_94, 90, 1},
/* 95 */ { 6, s_6_95, 90, 1},
/* 96 */ { 8, s_6_96, 95, 1},
/* 97 */ { 8, s_6_97, 95, 1},
/* 98 */ { 8, s_6_98, 95, 1},
/* 99 */ { 4, s_6_99, -1, 1},
/*100 */ { 6, s_6_100, 99, 1},
/*101 */ { 6, s_6_101, 99, 1},
/*102 */ { 6, s_6_102, 99, 1},
/*103 */ { 8, s_6_103, 99, 1},
/*104 */ { 8, s_6_104, 99, 1},
/*105 */ { 8, s_6_105, 99, 1},
/*106 */ { 4, s_6_106, -1, 1},
/*107 */ { 5, s_6_107, -1, 1},
/*108 */ { 5, s_6_108, -1, 1},
/*109 */ { 5, s_6_109, -1, 1},
/*110 */ { 5, s_6_110, -1, 1},
/*111 */ { 5, s_6_111, -1, 1},
/*112 */ { 5, s_6_112, -1, 1},
/*113 */ { 5, s_6_113, -1, 1},
/*114 */ { 2, s_6_114, -1, 1},
/*115 */ { 2, s_6_115, -1, 1},
/*116 */ { 2, s_6_116, -1, 1},
/*117 */ { 4, s_6_117, -1, 1},
/*118 */ { 4, s_6_118, -1, 1},
/*119 */ { 4, s_6_119, -1, 1}
};


static const Among a_7[7] = {
/*  0 */ { 1, s_7_0, -1, 1},
/*  1 */ { 1, s_7_1, -1, 1},
/*  2 */ { 1, s_7_2, -1, 1},
/*  3 */ { 2, s_7_3, -1, 1},
/*  4 */ { 2, s_7_4, -1, 1},
/*  5 */ { 2, s_7_5, -1, 1},
/*  6 */ { 2, s_7_6, -1, 1}
};


static const Among a_8[4] = {
/*  0 */ { 1, s_8_0, -1, 1},
/*  1 */ { 2, s_8_1, -1, 2},
/*  2 */ { 2, s_8_2, -1, 1},
/*  3 */ { 2, s_8_3, -1, 1}
};

static const uchar g_v[] = { 17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 19, 12, 2 };

static const symbol s_0[] = { 'a', '~' };
static const symbol s_1[] = { 'o', '~' };
static const symbol s_2[] = { 0xC3, 0xA3 };
static const symbol s_3[] = { 0xC3, 0xB5 };
static const symbol s_4[] = { 'l', 'o', 'g' };
static const symbol s_5[] = { 'u' };
static const symbol s_6[] = { 'e', 'n', 't', 'e' };
static const symbol s_7[] = { 'a', 't' };
static const symbol s_8[] = { 'a', 't' };
static const symbol s_9[] = { 'i', 'r' };
static const symbol s_10[] = { 'c' };

int Xapian::InternalStemPortuguese::r_prelude() {
	int among_var;
	while(1) {
		int c1 = c;
		bra = c;
		if(c + 1 >= l || (p[c + 1] != 163 && p[c + 1] != 181)) among_var = 3; else
		among_var = find_among(s_pool, a_0, 3, 0, 0);
		if(!(among_var)) goto lab0;
		ket = c;
		switch(among_var) {
			case 1:
				{    int ret = slice_from_s(2, s_0);
					if(ret < 0) return ret;
				}
				break;
			case 2:
				{    int ret = slice_from_s(2, s_1);
					if(ret < 0) return ret;
				}
				break;
			case 3:
				{    int ret = skip_utf8(p, c, 0, l, 1);
					if(ret < 0) goto lab0;
					c = ret;
				}
				break;
		}
		continue;
	lab0:
		c = c1;
		break;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::r_mark_regions() {
	I_pV = l;
	I_p1 = l;
	I_p2 = l;
	{   int c1 = c;
		{   int c2 = c;
			if(in_grouping_U(g_v, 97, 250, 0)) goto lab2;
			{   int c3 = c;
				if(out_grouping_U(g_v, 97, 250, 0)) goto lab4;
				{   
					int ret = out_grouping_U(g_v, 97, 250, 1);
					if(ret < 0) goto lab4;
					c += ret;
				}
				goto lab3;
			lab4:
				c = c3;
				if(in_grouping_U(g_v, 97, 250, 0)) goto lab2;
				{   
					int ret = in_grouping_U(g_v, 97, 250, 1);
					if(ret < 0) goto lab2;
					c += ret;
				}
			}
		lab3:
			goto lab1;
		lab2:
			c = c2;
			if(out_grouping_U(g_v, 97, 250, 0)) goto lab0;
			{   int c4 = c;
				if(out_grouping_U(g_v, 97, 250, 0)) goto lab6;
				{   
					int ret = out_grouping_U(g_v, 97, 250, 1);
					if(ret < 0) goto lab6;
					c += ret;
				}
				goto lab5;
			lab6:
				c = c4;
				if(in_grouping_U(g_v, 97, 250, 0)) goto lab0;
				{    int ret = skip_utf8(p, c, 0, l, 1);
					if(ret < 0) goto lab0;
					c = ret;
				}
			}
		lab5:
			;
		}
	lab1:
		I_pV = c;
	lab0:
		c = c1;
	}
	{   int c5 = c;
		{   
			int ret = out_grouping_U(g_v, 97, 250, 1);
			if(ret < 0) goto lab7;
			c += ret;
		}
		{   
			int ret = in_grouping_U(g_v, 97, 250, 1);
			if(ret < 0) goto lab7;
			c += ret;
		}
		I_p1 = c;
		{   
			int ret = out_grouping_U(g_v, 97, 250, 1);
			if(ret < 0) goto lab7;
			c += ret;
		}
		{   
			int ret = in_grouping_U(g_v, 97, 250, 1);
			if(ret < 0) goto lab7;
			c += ret;
		}
		I_p2 = c;
	lab7:
		c = c5;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::r_postlude() {
	int among_var;
	while(1) {
		int c1 = c;
		bra = c;
		if(c + 1 >= l || p[c + 1] != 126) among_var = 3; else
		among_var = find_among(s_pool, a_1, 3, 0, 0);
		if(!(among_var)) goto lab0;
		ket = c;
		switch(among_var) {
			case 1:
				{    int ret = slice_from_s(2, s_2);
					if(ret < 0) return ret;
				}
				break;
			case 2:
				{    int ret = slice_from_s(2, s_3);
					if(ret < 0) return ret;
				}
				break;
			case 3:
				{    int ret = skip_utf8(p, c, 0, l, 1);
					if(ret < 0) goto lab0;
					c = ret;
				}
				break;
		}
		continue;
	lab0:
		c = c1;
		break;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::r_RV() {
	if(!(I_pV <= c)) return 0;
	return 1;
}

int Xapian::InternalStemPortuguese::r_R1() {
	if(!(I_p1 <= c)) return 0;
	return 1;
}

int Xapian::InternalStemPortuguese::r_R2() {
	if(!(I_p2 <= c)) return 0;
	return 1;
}

int Xapian::InternalStemPortuguese::r_standard_suffix() {
	int among_var;
	ket = c;
	if(c - 2 <= lb || p[c-1] >> 5 != 3 || !((823330 >> (p[c-1] & 0x1f)) & 1)) return 0;
	among_var = find_among_b(s_pool, a_5, 45, 0, 0);
	if(!(among_var)) return 0;
	bra = c;
	switch(among_var) {
		case 1:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			break;
		case 2:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_from_s(3, s_4);
				if(ret < 0) return ret;
			}
			break;
		case 3:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_from_s(1, s_5);
				if(ret < 0) return ret;
			}
			break;
		case 4:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_from_s(4, s_6);
				if(ret < 0) return ret;
			}
			break;
		case 5:
			{    int ret = r_R1();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			{   int m1 = l - c; (void)m1;
				ket = c;
				if(c - 1 <= lb || p[c-1] >> 5 != 3 || !((4718616 >> (p[c-1] & 0x1f)) & 1)) { c = l - m1; goto lab0; }
				among_var = find_among_b(s_pool, a_2, 4, 0, 0);
				if(!(among_var)) { c = l - m1; goto lab0; }
				bra = c;
				{    int ret = r_R2();
					if(ret == 0) { c = l - m1; goto lab0; }
					if(ret < 0) return ret;
				}
				{    int ret = slice_del();
					if(ret < 0) return ret;
				}
				switch(among_var) {
					case 1:
						ket = c;
						if(!(eq_s_b(2, s_7))) { c = l - m1; goto lab0; }
						bra = c;
						{    int ret = r_R2();
							if(ret == 0) { c = l - m1; goto lab0; }
							if(ret < 0) return ret;
						}
						{    int ret = slice_del();
							if(ret < 0) return ret;
						}
						break;
				}
			lab0:
				;
			}
			break;
		case 6:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			{   int m2 = l - c; (void)m2;
				ket = c;
				if(c - 3 <= lb || (p[c-1] != 101 && p[c-1] != 108)) { c = l - m2; goto lab1; }
				if(!(find_among_b(s_pool, a_3, 3, 0, 0))) { c = l - m2; goto lab1; }
				bra = c;
				{    int ret = r_R2();
					if(ret == 0) { c = l - m2; goto lab1; }
					if(ret < 0) return ret;
				}
				{    int ret = slice_del();
					if(ret < 0) return ret;
				}
			lab1:
				;
			}
			break;
		case 7:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			{   int m3 = l - c; (void)m3;
				ket = c;
				if(c - 1 <= lb || p[c-1] >> 5 != 3 || !((4198408 >> (p[c-1] & 0x1f)) & 1)) { c = l - m3; goto lab2; }
				if(!(find_among_b(s_pool, a_4, 3, 0, 0))) { c = l - m3; goto lab2; }
				bra = c;
				{    int ret = r_R2();
					if(ret == 0) { c = l - m3; goto lab2; }
					if(ret < 0) return ret;
				}
				{    int ret = slice_del();
					if(ret < 0) return ret;
				}
			lab2:
				;
			}
			break;
		case 8:
			{    int ret = r_R2();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			{   int m4 = l - c; (void)m4;
				ket = c;
				if(!(eq_s_b(2, s_8))) { c = l - m4; goto lab3; }
				bra = c;
				{    int ret = r_R2();
					if(ret == 0) { c = l - m4; goto lab3; }
					if(ret < 0) return ret;
				}
				{    int ret = slice_del();
					if(ret < 0) return ret;
				}
			lab3:
				;
			}
			break;
		case 9:
			{    int ret = r_RV();
				if(ret <= 0) return ret;
			}
			if(c <= lb || p[c - 1] != 'e') return 0;
			c--;
			{    int ret = slice_from_s(2, s_9);
				if(ret < 0) return ret;
			}
			break;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::r_verb_suffix() {

	{    int mlimit1;
		if(c < I_pV) return 0;
		mlimit1 = lb; lb = I_pV;
		ket = c;
		if(!(find_among_b(s_pool, a_6, 120, 0, 0))) { lb = mlimit1; return 0; }
		bra = c;
		{    int ret = slice_del();
			if(ret < 0) return ret;
		}
		lb = mlimit1;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::r_residual_suffix() {
	ket = c;
	if(!(find_among_b(s_pool, a_7, 7, 0, 0))) return 0;
	bra = c;
	{    int ret = r_RV();
		if(ret <= 0) return ret;
	}
	{    int ret = slice_del();
		if(ret < 0) return ret;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::r_residual_form() {
	int among_var;
	ket = c;
	among_var = find_among_b(s_pool, a_8, 4, 0, 0);
	if(!(among_var)) return 0;
	bra = c;
	switch(among_var) {
		case 1:
			{    int ret = r_RV();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			ket = c;
			{   int m1 = l - c; (void)m1;
				if(c <= lb || p[c - 1] != 'u') goto lab1;
				c--;
				bra = c;
				{   int m_test2 = l - c;
					if(c <= lb || p[c - 1] != 'g') goto lab1;
					c--;
					c = l - m_test2;
				}
				goto lab0;
			lab1:
				c = l - m1;
				if(c <= lb || p[c - 1] != 'i') return 0;
				c--;
				bra = c;
				{   int m_test3 = l - c;
					if(c <= lb || p[c - 1] != 'c') return 0;
					c--;
					c = l - m_test3;
				}
			}
		lab0:
			{    int ret = r_RV();
				if(ret <= 0) return ret;
			}
			{    int ret = slice_del();
				if(ret < 0) return ret;
			}
			break;
		case 2:
			{    int ret = slice_from_s(1, s_10);
				if(ret < 0) return ret;
			}
			break;
	}
	return 1;
}

int Xapian::InternalStemPortuguese::stem() {
	{   int c1 = c;
		{   int ret = r_prelude();
			if(ret < 0) return ret;
		}
		c = c1;
	}
	
	{   int ret = r_mark_regions();
		if(ret < 0) return ret;
	}
	lb = c; c = l;

	{   int m2 = l - c; (void)m2;
		{   int m3 = l - c; (void)m3;
			{   int m4 = l - c; (void)m4;
				{   int m5 = l - c; (void)m5;
					{    int ret = r_standard_suffix();
						if(ret == 0) goto lab4;
						if(ret < 0) return ret;
					}
					goto lab3;
				lab4:
					c = l - m5;
					{    int ret = r_verb_suffix();
						if(ret == 0) goto lab2;
						if(ret < 0) return ret;
					}
				}
			lab3:
				c = l - m4;
				{   int m6 = l - c; (void)m6;
					ket = c;
					if(c <= lb || p[c - 1] != 'i') goto lab5;
					c--;
					bra = c;
					{   int m_test7 = l - c;
						if(c <= lb || p[c - 1] != 'c') goto lab5;
						c--;
						c = l - m_test7;
					}
					{    int ret = r_RV();
						if(ret == 0) goto lab5;
						if(ret < 0) return ret;
					}
					{    int ret = slice_del();
						if(ret < 0) return ret;
					}
				lab5:
					c = l - m6;
				}
			}
			goto lab1;
		lab2:
			c = l - m3;
			{    int ret = r_residual_suffix();
				if(ret == 0) goto lab0;
				if(ret < 0) return ret;
			}
		}
	lab1:
	lab0:
		c = l - m2;
	}
	{   int m8 = l - c; (void)m8;
		{   int ret = r_residual_form();
			if(ret < 0) return ret;
		}
		c = l - m8;
	}
	c = lb;
	{   int c9 = c;
		{   int ret = r_postlude();
			if(ret < 0) return ret;
		}
		c = c9;
	}
	return 1;
}

Xapian::InternalStemPortuguese::InternalStemPortuguese()
    : I_p2(0), I_p1(0), I_pV(0)
{
}

Xapian::InternalStemPortuguese::~InternalStemPortuguese()
{
}

std::string Xapian::InternalStemPortuguese::get_description() const { return "portuguese.sbl"; }
